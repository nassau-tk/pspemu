@LB  // Load Byte
	sRT = cast(int)mem.read1(RS + IMM);

@LH  // Load Half
	sRT = cast(int)mem.read2(RS + IMM);
	
@LWL // Load Word Left
	sRT = (RT & 0x0000FFFF) | ((mem.read2(RS + IMM - 1) << 16) & 0xFFFF0000);
	
@LW  // Loard Word
	sRT = cast(uint)mem.read4(RS + IMM);
	
@LBU // Load Byte Unsigned
	sRT = cast(uint)mem.read1(RS + IMM);

@LHU // Load Half Unsigned
	sRT = cast(uint)mem.read2(RS + IMM);
	
@LWR // Load Word Right
	sRT = (RT & 0xFFFF0000) | ((mem.read2(RS + IMM - 0) <<  0) & 0x0000FFFF);
	
@SB  // Sotre Byte
	mem.write1(RS + IMM, RT);
	
@SH  // Store Half
	mem.write2(RS + IMM, RT);
	
@SWL // Store Word Left
	mem.write2(RS + IMM - 1, (RT >> 16) & 0xFFFF);
	
@SW  // Store Word
	mem.write4(RS + IMM, RT);
	
@SWR // Store Word Right
	mem.write2(RS + IMM - 0, (RT >>  0) & 0xFFFF);
	
@CACHE // Cache
	// Unimplemented
	
@LL    // Load Linked Word
	// Unimplemented
	
//@LWC1  // Loard Word to Float Point
	// Unimplemented
	
//@SWC1  // Store Word from Floating Point
	// Unimplemented
